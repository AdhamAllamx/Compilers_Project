
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADDITION DIVISION EQUALS ID INT MULTIPLICATION NUM SEMI STRING STRING_TYPE SUBTRACTIONprogram : stmt_liststmt_list : stmt stmt_liststmt_list : stmtstmt : var_decl SEMIstmt : assignment SEMIvar_decl : type IDtype : INT\n| STRING_TYPEassignment : ID EQUALS exprexpr : expr ADDITION termexpr : expr SUBTRACTION termexpr : expr MULTIPLICATION termexpr : expr DIVISION termexpr : termterm : NUMterm : IDterm : STRING'
    
_lr_action_items = {'ID':([0,3,6,8,9,11,12,14,20,21,22,23,],[7,7,13,-7,-8,-4,-5,15,15,15,15,15,]),'INT':([0,3,11,12,],[8,8,-4,-5,]),'STRING_TYPE':([0,3,11,12,],[9,9,-4,-5,]),'$end':([1,2,3,10,11,12,],[0,-1,-3,-2,-4,-5,]),'SEMI':([4,5,13,15,16,17,18,19,24,25,26,27,],[11,12,-6,-16,-9,-14,-15,-17,-10,-11,-12,-13,]),'EQUALS':([7,],[14,]),'NUM':([14,20,21,22,23,],[18,18,18,18,18,]),'STRING':([14,20,21,22,23,],[19,19,19,19,19,]),'ADDITION':([15,16,17,18,19,24,25,26,27,],[-16,20,-14,-15,-17,-10,-11,-12,-13,]),'SUBTRACTION':([15,16,17,18,19,24,25,26,27,],[-16,21,-14,-15,-17,-10,-11,-12,-13,]),'MULTIPLICATION':([15,16,17,18,19,24,25,26,27,],[-16,22,-14,-15,-17,-10,-11,-12,-13,]),'DIVISION':([15,16,17,18,19,24,25,26,27,],[-16,23,-14,-15,-17,-10,-11,-12,-13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'stmt_list':([0,3,],[2,10,]),'stmt':([0,3,],[3,3,]),'var_decl':([0,3,],[4,4,]),'assignment':([0,3,],[5,5,]),'type':([0,3,],[6,6,]),'expr':([14,],[16,]),'term':([14,20,21,22,23,],[17,24,25,26,27,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> stmt_list','program',1,'p_program','Parser.py',97),
  ('stmt_list -> stmt stmt_list','stmt_list',2,'p_stmt_list_multiple','Parser.py',101),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list_single','Parser.py',105),
  ('stmt -> var_decl SEMI','stmt',2,'p_stmt_var_decl','Parser.py',109),
  ('stmt -> assignment SEMI','stmt',2,'p_stmt_assignment','Parser.py',113),
  ('var_decl -> type ID','var_decl',2,'p_var_decl','Parser.py',117),
  ('type -> INT','type',1,'p_type','Parser.py',121),
  ('type -> STRING_TYPE','type',1,'p_type','Parser.py',122),
  ('assignment -> ID EQUALS expr','assignment',3,'p_assignment','Parser.py',126),
  ('expr -> expr ADDITION term','expr',3,'p_expr_addition','Parser.py',130),
  ('expr -> expr SUBTRACTION term','expr',3,'p_expr_subtraction','Parser.py',134),
  ('expr -> expr MULTIPLICATION term','expr',3,'p_expr_multiplication','Parser.py',138),
  ('expr -> expr DIVISION term','expr',3,'p_expr_DIVISION','Parser.py',142),
  ('expr -> term','expr',1,'p_expr_term','Parser.py',146),
  ('term -> NUM','term',1,'p_term_num','Parser.py',150),
  ('term -> ID','term',1,'p_term_id','Parser.py',154),
  ('term -> STRING','term',1,'p_term_string','Parser.py',158),
]
